package test;

import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Supplier;

import model.Employee;
import model.User;
import utils.UtilityClass;


@FunctionalInterface
interface Users{
	
	User getUsers(Employee emp);
}
public class Question2 {

	public static void main(String[] args) {

		/*
			Question 2 : Create List of Users from List of Employees.  
			Write java 8 Supplier which will generate 16 Character random password as String.  
			Write java 8 function which will take Employee input and will return object of class User. UserName should be firstName+LastName+YearOfBirth+id and password will be generated by supplier above, use id from Employee class as id.
		 */
		
		//Create List of Users from List of Employees.
		List<Employee> empList = UtilityClass.getEmployees();
		
		Supplier<String> supplier = ()->{
			SecureRandom random = new SecureRandom();
			return new BigInteger(64, random).toString(16);
		};
		
		List<User> users = new ArrayList<>();
		
		for(Employee emp : empList ) {
			users.add(new User(emp.getId(),emp.getFirstName()+"_"+emp.getLastName()+"_"+emp.getDob().toString()         , supplier.get()));
		}
		
		//Printing the Users
		users.forEach(System.out::println);
		
		System.out.println();
		
		//Using Functional interface
		List<User> users2 = new ArrayList<>();
		Users user = (emp) ->{
			return new User(emp.getId(), emp.getFirstName()+"_"+emp.getLastName()+"_"+emp.getDob().toString(), supplier.get());
		};
		empList.forEach(emp -> users2.add(user.getUsers(emp)));
		users2.forEach(System.out::println);
		
		
	}

}
